[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test Categories
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    auth: Authentication module tests
    storage: Storage module tests
    ai: AI processor module tests
    slow: Tests that take longer than 1 second
    quick: Tests that should be quick

# Test Configuration
addopts = 
    --verbose
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail
    --durations=10
    -p no:warnings

# Environment Variables
env =
    ENVIRONMENT=test
    TESTING=true
    DATABASE_URL=postgresql+asyncpg://test:test@localhost:5432/test_db
    REDIS_URL=redis://localhost:6379/1
    MINIO_ENDPOINT=localhost:9000
    MINIO_ROOT_USER=minioadmin
    MINIO_ROOT_PASSWORD=minioadmin
    MINIO_SECURE=false
    JWT_SECRET_KEY=test-secret-key
    JWT_ALGORITHM=HS256

# Logging Configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test Timeouts
timeout = 300

# Async Support
asyncio_mode = auto

# Coverage Settings
[coverage:run]
branch = True
source = app

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

[coverage:html]
directory = htmlcov
