"""create_initial_tables

Revision ID: e4117c04da4d
Revises: 
Create Date: 2024-11-26 00:38:37.758785+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e4117c04da4d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_processing_results_id', table_name='processing_results')
    op.drop_table('processing_results')
    op.drop_table('folder_subfolders')
    op.drop_index('ix_files_id', table_name='files')
    op.drop_table('files')
    op.drop_index('ix_shared_items_id', table_name='shared_items')
    op.drop_table('shared_items')
    op.drop_table('chat_sessions')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_folders_id', table_name='folders')
    op.drop_table('folders')
    op.drop_index('ix_tokens_id', table_name='tokens')
    op.drop_table('tokens')
    op.drop_table('folder_files')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_table('roles')
    op.drop_index('ix_folder_collaborators_id', table_name='folder_collaborators')
    op.drop_table('folder_collaborators')
    op.drop_index('ix_chat_messages_id', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index('ix_file_metadata_id', table_name='file_metadata')
    op.drop_table('file_metadata')
    op.drop_index('ix_processing_tasks_id', table_name='processing_tasks')
    op.drop_table('processing_tasks')
    op.drop_index('ix_file_versions_id', table_name='file_versions')
    op.drop_table('file_versions')
    op.drop_table('user_roles')
    op.drop_index('ix_file_tags_id', table_name='file_tags')
    op.drop_table('file_tags')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file_tags',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='file_tags_created_by_fkey'),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='file_tags_file_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='file_tags_pkey')
    )
    op.create_index('ix_file_tags_id', 'file_tags', ['id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_roles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_roles_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name='user_roles_pkey')
    )
    op.create_table('file_versions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='file_versions_created_by_fkey'),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='file_versions_file_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='file_versions_pkey')
    )
    op.create_index('ix_file_versions_id', 'file_versions', ['id'], unique=False)
    op.create_table('processing_tasks',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('processing_tasks_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('QUEUED', 'PROCESSING', 'COMPLETED', 'FAILED', name='processingstatus'), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='processing_tasks_file_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='processing_tasks_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_processing_tasks_id', 'processing_tasks', ['id'], unique=False)
    op.create_table('file_metadata',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('content_summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_type_detected', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('language_detected', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='file_metadata_file_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='file_metadata_pkey'),
    sa.UniqueConstraint('file_id', name='file_metadata_file_id_key')
    )
    op.create_index('ix_file_metadata_id', 'file_metadata', ['id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sender', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name='chat_messages_session_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='chat_messages_pkey')
    )
    op.create_index('ix_chat_messages_id', 'chat_messages', ['id'], unique=False)
    op.create_table('folder_collaborators',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('folder_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('permissions', postgresql.ENUM('VIEWER', 'EDITOR', 'ADMIN', name='sharepermission'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'ACCEPTED', 'DECLINED', name='sharestatus'), autoincrement=False, nullable=True),
    sa.Column('invitation_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['folders.id'], name='folder_collaborators_folder_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='folder_collaborators_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='folder_collaborators_pkey')
    )
    op.create_index('ix_folder_collaborators_id', 'folder_collaborators', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('permissions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key')
    )
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('folder_files',
    sa.Column('folder_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='folder_files_file_id_fkey'),
    sa.ForeignKeyConstraint(['folder_id'], ['folders.id'], name='folder_files_folder_id_fkey'),
    sa.PrimaryKeyConstraint('folder_id', 'file_id', name='folder_files_pkey')
    )
    op.create_table('tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('token_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_revoked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tokens_pkey'),
    sa.UniqueConstraint('token', name='tokens_token_key')
    )
    op.create_index('ix_tokens_id', 'tokens', ['id'], unique=False)
    op.create_table('folders',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('folders_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_root', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='folders_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='folders_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_folders_id', 'folders', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('chat_sessions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('folder_ids', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='chat_sessions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='chat_sessions_pkey')
    )
    op.create_table('shared_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('folder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('shared_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('share_link', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='shared_items_file_id_fkey'),
    sa.ForeignKeyConstraint(['folder_id'], ['folders.id'], name='shared_items_folder_id_fkey'),
    sa.ForeignKeyConstraint(['shared_by'], ['users.id'], name='shared_items_shared_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='shared_items_pkey'),
    sa.UniqueConstraint('share_link', name='shared_items_share_link_key')
    )
    op.create_index('ix_shared_items_id', 'shared_items', ['id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('files_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('original_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bucket', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'PROCESSING', 'PROCESSED', 'FAILED', name='filestatus'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_latest', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='files_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='files_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_files_id', 'files', ['id'], unique=False)
    op.create_table('folder_subfolders',
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('child_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['folders.id'], name='folder_subfolders_child_id_fkey'),
    sa.ForeignKeyConstraint(['parent_id'], ['folders.id'], name='folder_subfolders_parent_id_fkey'),
    sa.PrimaryKeyConstraint('parent_id', 'child_id', name='folder_subfolders_pkey')
    )
    op.create_table('processing_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('result_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('result_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('confidence_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['processing_tasks.id'], name='processing_results_task_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='processing_results_pkey'),
    sa.UniqueConstraint('task_id', name='processing_results_task_id_key')
    )
    op.create_index('ix_processing_results_id', 'processing_results', ['id'], unique=False)
    # ### end Alembic commands ###
