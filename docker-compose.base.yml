services:
  # AI Cloud Storage Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql+asyncpg://aicloud:aicloud@postgres:5432/aicloud
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_SECURE=false
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    ports:
      - "8000:8000"
    volumes:
      - app_logs:/app/logs
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - aicloud-net

  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: aicloud
      POSTGRES_PASSWORD: aicloud
      POSTGRES_DB: aicloud
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aicloud"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aicloud-net

  # Redis Cache
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aicloud-net

  # MinIO Object Storage
  minio:
    image: minio/minio:RELEASE.2023-11-15T20-43-25Z
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - aicloud-net

networks:
  aicloud-net:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
  app_logs:
